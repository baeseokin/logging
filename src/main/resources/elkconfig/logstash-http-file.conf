input {
  beats {
    port => 5044
  }
  
  http {
    host => "localhost"
	port => 5055
	codec => json
  }
}

filter {
  if [@metadata][beat] {
    grok {
	  match => {
	    "message" => [
          "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} -->\n%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Error Code: %{WORD:error_code}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Error Message: %{GREEDYDATA:error_message}\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} UserId: %{WORD:user_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} PageId: %{WORD:page_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} ServiceId: %{WORD:service_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} RequestURI: %{GREEDYDATA:request_uri}\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Stack Trace:\s*(?m)^%{JAVACLASS:exception_class}: %{GREEDYDATA:exception_trace}\s*\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} <--"
        ]
	  }
    }


    mutate{
	  remove_field => ["message","event"]
	}
	
	# 필터링된 데이터에 조건 추가 가능 (예: exception_class 존재 여부 체크)
    if [exception_class] {
      mutate {
        add_field => {
          "exception_detected" => "true"
        }
      }
    }
	
  }
}


output {
  if [@metadata][beat] {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "error"
      user => "elastic"
      password => "elastic1234"
    }
  }else{
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logging"
      user => "elastic"
      password => "elastic1234"
    }

  }  
  stdout {
    codec => rubydebug
  }
}
