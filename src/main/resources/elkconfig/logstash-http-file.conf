input {
  beats {
    port => 5044
  }
  
  http {
    host => "localhost"
	port => 5055
	codec => json
  }
}

filter {



  if [@metadata][beat] {
    grok {
	  match => {
	    "message" => [
          "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} -->\n%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Error Code: %{WORD:error_code}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Error Message: %{GREEDYDATA:error_message}\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} UserId: %{WORD:user_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} PageId: %{WORD:page_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} ServiceId: %{WORD:service_id}\s*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} RequestURI: %{GREEDYDATA:request_uri}\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} Stack Trace:\s*(?m)^%{JAVACLASS:exception_class}: %{GREEDYDATA:exception_trace}\s*\n\r*%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} <--"
        ]
	  }
    }

    mutate{
	  remove_field => ["message","event"]
	}

	# 필터링된 데이터에 조건 추가 가능 (예: exception_class 존재 여부 체크)
    if [exception_class] {
      mutate {
        add_field => {
          "exception_detected" => "true"
        }
      }
    }

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # Page명 가져오기
      statement => "SELECT page_nm FROM logging.page_info WHERE page_id = :page_id"
      parameters => { "page_id" => "[page_id]" }
      target => "page_name"
    }

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # System명 가져오기
      statement => "SELECT s.system_nm FROM logging.page_info AS p LEFT JOIN logging.system_info as s ON SUBSTR(p.page_id, 4,3) = s.system_id WHERE p.page_id = :page_id"
      parameters => { "page_id" => "[page_id]" }
      target => "system_name"
    }

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # Service명 가져오기
      statement => "SELECT service_nm FROM logging.service_info WHERE service_id = :service_id"
      parameters => { "service_id" => "[service_id]" }
      target => "service_name"

    }

  }else{
  	date {
       match => ["RequestTime", "ISO8601"]
       target => "RequestTime"
       timezone => "Asia/Seoul"
	}

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # Page명 가져오기
      statement => "SELECT page_nm FROM logging.page_info WHERE page_id = :page_id"
      parameters => { "page_id" => "[PageId]" }
      target => "page_name"
    }

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # System명 가져오기
      statement => "SELECT s.system_nm FROM logging.page_info AS p LEFT JOIN logging.system_info as s ON SUBSTR(p.page_id, 4,3) = s.system_id WHERE p.page_id = :page_id"
      parameters => { "page_id" => "[PageId]" }
      target => "system_name"

    }

    jdbc_streaming {
      jdbc_driver_library => "C:\work\jdbc\mariadb-java-client-3.4.1.jar"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"        # DB 드라이버 클래스
      jdbc_connection_string => "jdbc:mariadb://localhost:3306/logging"  # DB 연결 정보
      jdbc_user => "root"                             # DB 사용자
      jdbc_password => "mariadb"                         # DB 비밀번호

      # Service명 가져오기
      statement => "SELECT service_nm FROM logging.service_info WHERE service_id = :service_id"
      parameters => { "service_id" => "[ServiceId]" }
      target => "service_name"

    }

  }
}


output {
  if [@metadata][beat] {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "error"
      user => "elastic"
      password => "elastic1234"
    }
  }else{
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logging"
      user => "elastic"
      password => "elastic1234"
    }

  }  
  stdout {
    codec => rubydebug
  }
}
